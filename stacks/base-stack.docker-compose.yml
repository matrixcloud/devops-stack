version: '3.7'

configs:
  traefik-conf:
    external: true

services:
  proxy:
    image: traefik:v2.10.5
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    configs:
      - source: traefik-conf
        target: /etc/traefik/traefik.yml
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 29418
        published: 29418
        protocol: tcp
        mode: host
    networks:
      - proxy
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=proxy"
        - "traefik.http.routers.api_traefik.rule=Host(`traefik.example.com`)"
        - "traefik.http.routers.api_traefik.entrypoints=http"
        - "traefik.http.routers.api_traefik.service=api@internal"
        - "traefik.http.services.api.loadbalancer.server.port=8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  agent:
    image: portainer/agent:2.11.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - proxy
    deploy:
      mode: global
  portainer:
    image: portainer/portainer-ce:2.11.1
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer-data:/data
    networks:
      - proxy
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=proxy"
        - "traefik.http.routers.portainer.rule=Host(`portainer.example.com`)"
        - "traefik.http.routers.portainer.entrypoints=http"
        - "traefik.http.routers.portainer.service=portainer"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"

networks:
  proxy:
    external: true

volumes:
  portainer-data: